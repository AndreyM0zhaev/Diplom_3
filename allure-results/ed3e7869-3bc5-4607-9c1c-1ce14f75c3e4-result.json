{"name": "Проверка увеличения счетчика выполненных заказов за все время", "status": "broken", "statusDetails": {"message": "ValueError: response body:\n{\"message\":\"API rate limit exceeded for 95.25.48.134. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\",\"documentation_url\":\"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"}\n\nrequest url:\nhttps://api.github.com/repos/mozilla/geckodriver/releases/latest\nresponse headers:\n{'Date': 'Tue, 18 Feb 2025 04:56:33 GMT', 'Server': 'Varnish', 'Strict-Transport-Security': 'max-age=31536000; includeSubdomains; preload', 'X-Content-Type-Options': 'nosniff', 'X-Frame-Options': 'deny', 'X-XSS-Protection': '1; mode=block', 'Content-Security-Policy': \"default-src 'none'; style-src 'unsafe-inline'\", 'Access-Control-Allow-Origin': '*', 'Access-Control-Expose-Headers': 'ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-RateLimit-Used, X-RateLimit-Resource, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset', 'Content-Type': 'application/json; charset=utf-8', 'Referrer-Policy': 'origin-when-cross-origin, strict-origin-when-cross-origin', 'X-GitHub-Media-Type': 'github.v3; format=json', 'X-RateLimit-Limit': '60', 'X-RateLimit-Remaining': '0', 'X-RateLimit-Reset': '1739855991', 'X-RateLimit-Resource': 'core', 'X-RateLimit-Used': '60', 'Content-Length': '278', 'X-GitHub-Request-Id': 'FBBF:706B9:5DAF316:60BA244:67B41301'}", "trace": "request = <SubRequest 'browser' for <Function test_counter_increment_completed_for_all_time[firefox]>>\n\n    @pytest.fixture(params=[\"chrome\", \"firefox\"])\n    def browser(request):\n        \"\"\"\n        Фикстура для инициализации и завершения работы веб-драйвера.\n        Поддерживает запуск тестов на Chrome и Firefox.\n        Возвращает экземпляр драйвера для использования в тестах.\n        \"\"\"\n        browser = None\n        with allure.step(f\"Инициализация браузера: {request.param}\"):\n            if request.param == \"chrome\":\n                options = webdriver.ChromeOptions()\n                options.add_argument(\"--start-maximized\")\n                browser = webdriver.Chrome(\n                    service=ChromeService(ChromeDriverManager().install()),\n                    options=options\n                )\n            elif request.param == \"firefox\":\n                options = webdriver.FirefoxOptions()\n                options.add_argument(\"--start-maximized\")\n                browser = webdriver.Firefox(\n>                   service=FirefoxService(GeckoDriverManager().install()),\n                    options=options\n                )\n\nconftest.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nD:\\REPO\\Python\\Yandex\\Sunshine\\.venv\\Lib\\site-packages\\webdriver_manager\\firefox.py:39: in install\n    driver_path = self._get_driver_binary_path(self.driver)\nD:\\REPO\\Python\\Yandex\\Sunshine\\.venv\\Lib\\site-packages\\webdriver_manager\\core\\manager.py:35: in _get_driver_binary_path\n    binary_path = self._cache_manager.find_driver(driver)\nD:\\REPO\\Python\\Yandex\\Sunshine\\.venv\\Lib\\site-packages\\webdriver_manager\\core\\driver_cache.py:107: in find_driver\n    driver_version = self.get_cache_key_driver_version(driver)\nD:\\REPO\\Python\\Yandex\\Sunshine\\.venv\\Lib\\site-packages\\webdriver_manager\\core\\driver_cache.py:154: in get_cache_key_driver_version\n    return driver.get_driver_version_to_download()\nD:\\REPO\\Python\\Yandex\\Sunshine\\.venv\\Lib\\site-packages\\webdriver_manager\\core\\driver.py:48: in get_driver_version_to_download\n    return self.get_latest_release_version()\nD:\\REPO\\Python\\Yandex\\Sunshine\\.venv\\Lib\\site-packages\\webdriver_manager\\drivers\\firefox.py:29: in get_latest_release_version\n    resp = self._http_client.get(\nD:\\REPO\\Python\\Yandex\\Sunshine\\.venv\\Lib\\site-packages\\webdriver_manager\\core\\http.py:36: in get\n    self.validate_response(resp)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nresp = <Response [403]>\n\n    @staticmethod\n    def validate_response(resp: requests.Response):\n        status_code = resp.status_code\n        if status_code == 404:\n            raise ValueError(f\"There is no such driver by url {resp.url}\")\n        elif status_code == 401:\n            raise ValueError(f\"API Rate limit exceeded. You have to add GH_TOKEN!!!\")\n        elif resp.status_code != 200:\n>           raise ValueError(\n                f\"response body:\\n{resp.text}\\n\"\n                f\"request url:\\n{resp.request.url}\\n\"\n                f\"response headers:\\n{dict(resp.headers)}\\n\"\n            )\nE           ValueError: response body:\nE           {\"message\":\"API rate limit exceeded for 95.25.48.134. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\",\"documentation_url\":\"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"}\nE           \nE           request url:\nE           https://api.github.com/repos/mozilla/geckodriver/releases/latest\nE           response headers:\nE           {'Date': 'Tue, 18 Feb 2025 04:56:33 GMT', 'Server': 'Varnish', 'Strict-Transport-Security': 'max-age=31536000; includeSubdomains; preload', 'X-Content-Type-Options': 'nosniff', 'X-Frame-Options': 'deny', 'X-XSS-Protection': '1; mode=block', 'Content-Security-Policy': \"default-src 'none'; style-src 'unsafe-inline'\", 'Access-Control-Allow-Origin': '*', 'Access-Control-Expose-Headers': 'ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-RateLimit-Used, X-RateLimit-Resource, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset', 'Content-Type': 'application/json; charset=utf-8', 'Referrer-Policy': 'origin-when-cross-origin, strict-origin-when-cross-origin', 'X-GitHub-Media-Type': 'github.v3; format=json', 'X-RateLimit-Limit': '60', 'X-RateLimit-Remaining': '0', 'X-RateLimit-Reset': '1739855991', 'X-RateLimit-Resource': 'core', 'X-RateLimit-Used': '60', 'Content-Length': '278', 'X-GitHub-Request-Id': 'FBBF:706B9:5DAF316:60BA244:67B41301'}\n\nD:\\REPO\\Python\\Yandex\\Sunshine\\.venv\\Lib\\site-packages\\webdriver_manager\\core\\http.py:19: ValueError"}, "description": "Тест проверяет, что при создании нового заказа счётчик Выполнено за всё время увеличивается", "parameters": [{"name": "browser", "value": "'firefox'"}], "start": 1739854592920, "stop": 1739854592920, "uuid": "14d2536e-4822-4bd3-a8ac-0927e06b6d8a", "historyId": "e6c5138f321de50a9b49eee8ffc3a78d", "testCaseId": "0ddd0610b6a1de2df2a1dc50e7b99e8f", "fullName": "tests.test_feed_page.TestFeedPage#test_counter_increment_completed_for_all_time", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_feed_page"}, {"name": "subSuite", "value": "TestFeedPage"}, {"name": "host", "value": "DESKTOP-1H286BJ"}, {"name": "thread", "value": "33324-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_feed_page"}]}